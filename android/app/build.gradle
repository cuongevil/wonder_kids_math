plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
}

android {
    namespace "com.ctmd.wonderforge.wonder_kids_math"
    compileSdkVersion 36

    defaultConfig {
        applicationId "com.ctmd.wonderforge.wonder_kids_math"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion 36
        versionCode 1
        versionName "1.0.0"
    }

    signingConfigs {
        release {
            def keystoreProperties = new Properties()
            def keystorePropertiesFile = rootProject.file("key.properties")
            if (keystorePropertiesFile.exists()) {
                keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            }
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    // ⚡ Fix output để Flutter tìm thấy APK
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            // chỉ đổi tên file (không set absolute path)
            def fileName = "app-${variant.buildType.name}.apk"
            output.outputFileName = fileName

            // copy sau khi build xong
            tasks.named("assemble${variant.buildType.name.capitalize()}").configure {
                doLast {
                    def buildDirOld = output.outputFile.parentFile
                    def buildDirNew = new File(rootProject.projectDir, "../build/app/outputs/flutter-apk")
                    if (!buildDirNew.exists()) {
                        buildDirNew.mkdirs()
                    }
                    copy {
                        from("${buildDirOld}/${fileName}")
                        into(buildDirNew)
                    }
                }
            }
        }
    }
}

flutter {
    source '../..'
}
